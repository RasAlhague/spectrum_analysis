<?php

class CurvesDataClass {
    var $device_type;
	var $device_name;
	private $file_name;
	var $time_const;
	var $dots;
	var $frequency_labels;
	var $steps_number;
	var $positions = array();
	
	function init($device_type_global, $khertz_local) {
		$this->device_type = $device_type_global;
		
		switch ($this->device_type) {
		case 0:
			// Дополнительные константы и настройки для анализатора спектра Ubiquiti AirView2
			// Коэфициент усиления встроенной антенны около 3 дБ

			$this->device_name = 'Ubiquiti AirView2 (Chipcon CC2511-F32)'; // Название устройства
			$this->file_name = "data/runtime.log"; // Имя log-файла (по умолчанию runtime.log)
			$this->time_const = 0.267; // Постоянный множитель времени для расчета полного времени анализа
			$this->dots = 172; // Количество точек дискретизации по оси частот (счет начинается с 0)
			$this->steps_number = 10; // Количество точек и расстояние между вертикальными осями по оси частот

			// Массив частот
			$this->frequency_labels = array('2399', '2399.5', '2400', 
			'2400.5', '2401', '2401.5', '2402', '2402.5', '2403', '2403.5', '2404', '2404.5', '2405', 
			'2405.5', '2406', '2406.5', '2407', '2407.5', '2408', '2408.5', '2409', '2409.5', '2410', 
			'2410.5', '2411', '2411.5', '2412', '2412.5', '2413', '2413.5', '2414', '2414.5', '2415', 
			'2415.5', '2416', '2416.5', '2417', '2417.5', '2418', '2418.5', '2419', '2419.5', '2420', 
			'2420.5', '2421', '2421.5', '2422', '2422.5', '2423', '2423.5', '2424', '2424.5', '2425', 
			'2425.5', '2426', '2426.5', '2427', '2427.5', '2428', '2428.5', '2429', '2429.5', '2430', 
			'2430.5', '2431', '2431.5', '2432', '2432.5', '2433', '2433.5', '2434', '2434.5', '2435', 
			'2435.5', '2436', '2436.5', '2437', '2437.5', '2438', '2438.5', '2439', '2439.5', '2440', 
			'2440.5', '2441', '2441.5', '2442', '2442.5', '2443', '2443.5', '2444', '2444.5', '2445', 
			'2445.5', '2446', '2446.5', '2447', '2447.5', '2448', '2448.5', '2449', '2449.5', '2450', 
			'2450.5', '2451', '2451.5', '2452', '2452.5', '2453', '2453.5', '2454', '2454.5', '2455', 
			'2455.5', '2456', '2456.5', '2457', '2457.5', '2458', '2458.5', '2459', '2459.5', '2460', 
			'2460.5', '2461', '2461.5', '2462', '2462.5', '2463', '2463.5', '2464', '2464.5', '2465', 
			'2465.5', '2466', '2466.5', '2467', '2467.5', '2468', '2468.5', '2469', '2469.5', '2470', 
			'2470.5', '2471', '2471.5', '2472', '2472.5', '2473', '2473.5', '2474', '2474.5', '2475', 
			'2475.5', '2476', '2476.5', '2477', '2477.5', '2478', '2478.5', '2479', '2479.5', '2480', 
			'2480.5', '2481', '2481.5', '2482', '2482.5', '2483', '2483.5', '2484', '2484.5', '2485');
			break;
			
		case 1:
			// Дополнительные константы и настройки для анализатора спектра Wi-detector
			$this->device_name = 'Wi-detector (Cypress CYRF6936)'; // Название устройства
			$this->file_name = "data/wi.log"; // Имя log-файла
			$this->time_const = 0.08; // Постоянный множитель времени для расчета полного времени анализа
			$this->dots = 97; // Количество точек дискретизации по оси частот (счет начинается с 0)
			$this->steps_number = 5; // Количество точек и расстояние между вертикальными осями по оси частот

			$this->frequency_labels = array('2399', '2400', 
			'2401', '2402', '2403', '2404', '2405', '2406', '2407', '2408', '2409', '2410', 
			'2411', '2412', '2413', '2414', '2415', '2416', '2417', '2418', '2419', '2420', 
			'2421', '2422', '2423', '2424', '2425', '2426', '2427', '2428', '2429', '2430', 
			'2431', '2432', '2433', '2434', '2435', '2436', '2437', '2438', '2439', '2440', 
			'2441', '2442', '2443', '2444', '2445', '2446', '2447', '2448', '2449', '2450', 
			'2451', '2452', '2453', '2454', '2455', '2456', '2457', '2458', '2459', '2460', 
			'2461', '2462', '2463', '2464', '2465', '2466', '2467', '2468', '2469', '2470', 
			'2471', '2472', '2473', '2474', '2475', '2476', '2477', '2478', '2479', '2480', 
			'2481', '2482', '2483', '2484', '2485', '2486', '2487', '2488', '2489', '2490', 
			'2491', '2492', '2493', '2494', '2495', '2496');
			break;
			
		case 2:
			// Дополнительные константы и настройки для анализатора спектра Metageek Wi-Spy 2.4x
			// Без антенны чувствительность падает на 5 дБмВт

			$this->device_name = 'Metageek Wi-Spy 2.4x 500 '.$khertz_local.' (Chipcon CC2511-F32)'; // Название устройства
			$this->file_name = "data/wispy500.log"; // Имя log-файла
			$this->time_const = 0.35; // Постоянный множитель времени для расчета полного времени анализа
			$this->dots = 190; // Количество точек дискретизации по оси частот (счет начинается с 0)
			$this->steps_number = 10; // Количество точек и расстояние между вертикальными осями по оси частот

			// Массив частот расстояние между точками 500,0 кГц
			$this->frequency_labels = array('2400', 
			'2400.5', '2401', '2401.5', '2402', '2402.5', '2403', '2403.5', '2404', '2404.5', '2405', 
			'2405.5', '2406', '2406.5', '2407', '2407.5', '2408', '2408.5', '2409', '2409.5', '2410', 
			'2410.5', '2411', '2411.5', '2412', '2412.5', '2413', '2413.5', '2414', '2414.5', '2415', 
			'2415.5', '2416', '2416.5', '2417', '2417.5', '2418', '2418.5', '2419', '2419.5', '2420', 
			'2420.5', '2421', '2421.5', '2422', '2422.5', '2423', '2423.5', '2424', '2424.5', '2425', 
			'2425.5', '2426', '2426.5', '2427', '2427.5', '2428', '2428.5', '2429', '2429.5', '2430', 
			'2430.5', '2431', '2431.5', '2432', '2432.5', '2433', '2433.5', '2434', '2434.5', '2435', 
			'2435.5', '2436', '2436.5', '2437', '2437.5', '2438', '2438.5', '2439', '2439.5', '2440', 
			'2440.5', '2441', '2441.5', '2442', '2442.5', '2443', '2443.5', '2444', '2444.5', '2445', 
			'2445.5', '2446', '2446.5', '2447', '2447.5', '2448', '2448.5', '2449', '2449.5', '2450', 
			'2450.5', '2451', '2451.5', '2452', '2452.5', '2453', '2453.5', '2454', '2454.5', '2455', 
			'2455.5', '2456', '2456.5', '2457', '2457.5', '2458', '2458.5', '2459', '2459.5', '2460', 
			'2460.5', '2461', '2461.5', '2462', '2462.5', '2463', '2463.5', '2464', '2464.5', '2465', 
			'2465.5', '2466', '2466.5', '2467', '2467.5', '2468', '2468.5', '2469', '2469.5', '2470', 
			'2470.5', '2471', '2471.5', '2472', '2472.5', '2473', '2473.5', '2474', '2474.5', '2475', 
			'2475.5', '2476', '2476.5', '2477', '2477.5', '2478', '2478.5', '2479', '2479.5', '2480', 
			'2480.5', '2481', '2481.5', '2482', '2482.5', '2483', '2483.5', '2484', '2484.5', '2485',
			'2485.5', '2486', '2486.5', '2487', '2487.5', '2488', '2488.5', '2489', '2489.5', '2490', 
			'2490.5', '2491', '2491.5', '2492', '2492.5', '2493', '2493.5', '2494', '2494.5', '2495');
			break;
			
		case 3:
			// Дополнительные константы и настройки для анализатора спектра Metageek Wi-Spy 2.4x

			$this->device_name = 'Metageek Wi-Spy 2.4x 50 '.$khertz_local.' (Chipcon CC2511-F32)'; // Название устройства
			$this->file_name = "data/wispy50.log"; // Имя log-файла
			$this->time_const = 4.04; // Постоянный множитель времени для расчета полного времени анализа
			$this->dots = 1900; // Количество точек дискретизации по оси частот (счет начинается с 0)
			$this->steps_number = 100; // Количество точек и расстояние между вертикальными осями по оси частот
			
			// Массив частот расстояние между точками 50,0 кГц
			$this->frequency_labels = array('2400', 
			'2400.05', '2400.1', '2400.15', '2400.2', '2400.25', '2400.3', '2400.35', '2400.4', '2400.45', '2400.5', 
			'2400.55', '2400.6', '2400.65', '2400.7', '2400.75', '2400.8', '2400.85', '2400.9', '2400.95', '2401', 
			'2401.05', '2401.1', '2401.15', '2401.2', '2401.25', '2401.3', '2401.35', '2401.4', '2401.45', '2401.5', 
			'2401.55', '2401.6', '2401.65', '2401.7', '2401.75', '2401.8', '2401.85', '2401.9', '2401.95', '2402', 
			'2402.05', '2402.1', '2402.15', '2402.2', '2402.25', '2402.3', '2402.35', '2402.4', '2402.45', '2402.5', 
			'2402.55', '2402.6', '2402.65', '2402.7', '2402.75', '2402.8', '2402.85', '2402.9', '2402.95', '2403', 
			'2403.05', '2403.1', '2403.15', '2403.2', '2403.25', '2403.3', '2403.35', '2403.4', '2403.45', '2403.5', 
			'2403.55', '2403.6', '2403.65', '2403.7', '2403.75', '2403.8', '2403.85', '2403.9', '2403.95', '2404', 
			'2404.05', '2404.1', '2404.15', '2404.2', '2404.25', '2404.3', '2404.35', '2404.4', '2404.45', '2404.5', 
			'2404.55', '2404.6', '2404.65', '2404.7', '2404.75', '2404.8', '2404.85', '2404.9', '2404.95', '2405', 
			'2405.05', '2405.1', '2405.15', '2405.2', '2405.25', '2405.3', '2405.35', '2405.4', '2405.45', '2405.5', 
			'2405.55', '2405.6', '2405.65', '2405.7', '2405.75', '2405.8', '2405.85', '2405.9', '2405.95', '2406', 
			'2406.05', '2406.1', '2406.15', '2406.2', '2406.25', '2406.3', '2406.35', '2406.4', '2406.45', '2406.5', 
			'2406.55', '2406.6', '2406.65', '2406.7', '2406.75', '2406.8', '2406.85', '2406.9', '2406.95', '2407', 
			'2407.05', '2407.1', '2407.15', '2407.2', '2407.25', '2407.3', '2407.35', '2407.4', '2407.45', '2407.5', 
			'2407.55', '2407.6', '2407.65', '2407.7', '2407.75', '2407.8', '2407.85', '2407.9', '2407.95', '2408', 
			'2408.05', '2408.1', '2408.15', '2408.2', '2408.25', '2408.3', '2408.35', '2408.4', '2408.45', '2408.5', 
			'2408.55', '2408.6', '2408.65', '2408.7', '2408.75', '2408.8', '2408.85', '2408.9', '2408.95', '2409', 
			'2409.05', '2409.1', '2409.15', '2409.2', '2409.25', '2409.3', '2409.35', '2409.4', '2409.45', '2409.5', 
			'2409.55', '2409.6', '2409.65', '2409.7', '2409.75', '2409.8', '2409.85', '2409.9', '2409.95', '2410', 
			'2410.05', '2410.1', '2410.15', '2410.2', '2410.25', '2410.3', '2410.35', '2410.4', '2410.45', '2410.5', 
			'2410.55', '2410.6', '2410.65', '2410.7', '2410.75', '2410.8', '2410.85', '2410.9', '2410.95', '2411', 
			'2411.05', '2411.1', '2411.15', '2411.2', '2411.25', '2411.3', '2411.35', '2411.4', '2411.45', '2411.5', 
			'2411.55', '2411.6', '2411.65', '2411.7', '2411.75', '2411.8', '2411.85', '2411.9', '2411.95', '2412', 
			'2412.05', '2412.1', '2412.15', '2412.2', '2412.25', '2412.3', '2412.35', '2412.4', '2412.45', '2412.5', 
			'2412.55', '2412.6', '2412.65', '2412.7', '2412.75', '2412.8', '2412.85', '2412.9', '2412.95', '2413', 
			'2413.05', '2413.1', '2413.15', '2413.2', '2413.25', '2413.3', '2413.35', '2413.4', '2413.45', '2413.5', 
			'2413.55', '2413.6', '2413.65', '2413.7', '2413.75', '2413.8', '2413.85', '2413.9', '2413.95', '2414', 
			'2414.05', '2414.1', '2414.15', '2414.2', '2414.25', '2414.3', '2414.35', '2414.4', '2414.45', '2414.5', 
			'2414.55', '2414.6', '2414.65', '2414.7', '2414.75', '2414.8', '2414.85', '2414.9', '2414.95', '2415', 
			'2415.05', '2415.1', '2415.15', '2415.2', '2415.25', '2415.3', '2415.35', '2415.4', '2415.45', '2415.5', 
			'2415.55', '2415.6', '2415.65', '2415.7', '2415.75', '2415.8', '2415.85', '2415.9', '2415.95', '2416', 
			'2416.05', '2416.1', '2416.15', '2416.2', '2416.25', '2416.3', '2416.35', '2416.4', '2416.45', '2416.5', 
			'2416.55', '2416.6', '2416.65', '2416.7', '2416.75', '2416.8', '2416.85', '2416.9', '2416.95', '2417', 
			'2417.05', '2417.1', '2417.15', '2417.2', '2417.25', '2417.3', '2417.35', '2417.4', '2417.45', '2417.5', 
			'2417.55', '2417.6', '2417.65', '2417.7', '2417.75', '2417.8', '2417.85', '2417.9', '2417.95', '2418', 
			'2418.05', '2418.1', '2418.15', '2418.2', '2418.25', '2418.3', '2418.35', '2418.4', '2418.45', '2418.5', 
			'2418.55', '2418.6', '2418.65', '2418.7', '2418.75', '2418.8', '2418.85', '2418.9', '2418.95', '2419', 
			'2419.05', '2419.1', '2419.15', '2419.2', '2419.25', '2419.3', '2419.35', '2419.4', '2419.45', '2419.5', 
			'2419.55', '2419.6', '2419.65', '2419.7', '2419.75', '2419.8', '2419.85', '2419.9', '2419.95', '2420', 
			'2420.05', '2420.1', '2420.15', '2420.2', '2420.25', '2420.3', '2420.35', '2420.4', '2420.45', '2420.5', 
			'2420.55', '2420.6', '2420.65', '2420.7', '2420.75', '2420.8', '2420.85', '2420.9', '2420.95', '2421', 
			'2421.05', '2421.1', '2421.15', '2421.2', '2421.25', '2421.3', '2421.35', '2421.4', '2421.45', '2421.5', 
			'2421.55', '2421.6', '2421.65', '2421.7', '2421.75', '2421.8', '2421.85', '2421.9', '2421.95', '2422', 
			'2422.05', '2422.1', '2422.15', '2422.2', '2422.25', '2422.3', '2422.35', '2422.4', '2422.45', '2422.5', 
			'2422.55', '2422.6', '2422.65', '2422.7', '2422.75', '2422.8', '2422.85', '2422.9', '2422.95', '2423', 
			'2423.05', '2423.1', '2423.15', '2423.2', '2423.25', '2423.3', '2423.35', '2423.4', '2423.45', '2423.5', 
			'2423.55', '2423.6', '2423.65', '2423.7', '2423.75', '2423.8', '2423.85', '2423.9', '2423.95', '2424', 
			'2424.05', '2424.1', '2424.15', '2424.2', '2424.25', '2424.3', '2424.35', '2424.4', '2424.45', '2424.5', 
			'2424.55', '2424.6', '2424.65', '2424.7', '2424.75', '2424.8', '2424.85', '2424.9', '2424.95', '2425', 
			'2425.05', '2425.1', '2425.15', '2425.2', '2425.25', '2425.3', '2425.35', '2425.4', '2425.45', '2425.5', 
			'2425.55', '2425.6', '2425.65', '2425.7', '2425.75', '2425.8', '2425.85', '2425.9', '2425.95', '2426', 
			'2426.05', '2426.1', '2426.15', '2426.2', '2426.25', '2426.3', '2426.35', '2426.4', '2426.45', '2426.5', 
			'2426.55', '2426.6', '2426.65', '2426.7', '2426.75', '2426.8', '2426.85', '2426.9', '2426.95', '2427', 
			'2427.05', '2427.1', '2427.15', '2427.2', '2427.25', '2427.3', '2427.35', '2427.4', '2427.45', '2427.5', 
			'2427.55', '2427.6', '2427.65', '2427.7', '2427.75', '2427.8', '2427.85', '2427.9', '2427.95', '2428', 
			'2428.05', '2428.1', '2428.15', '2428.2', '2428.25', '2428.3', '2428.35', '2428.4', '2428.45', '2428.5', 
			'2428.55', '2428.6', '2428.65', '2428.7', '2428.75', '2428.8', '2428.85', '2428.9', '2428.95', '2429', 
			'2429.05', '2429.1', '2429.15', '2429.2', '2429.25', '2429.3', '2429.35', '2429.4', '2429.45', '2429.5', 
			'2429.55', '2429.6', '2429.65', '2429.7', '2429.75', '2429.8', '2429.85', '2429.9', '2429.95', '2430', 
			'2430.05', '2430.1', '2430.15', '2430.2', '2430.25', '2430.3', '2430.35', '2430.4', '2430.45', '2430.5', 
			'2430.55', '2430.6', '2430.65', '2430.7', '2430.75', '2430.8', '2430.85', '2430.9', '2430.95', '2431', 
			'2431.05', '2431.1', '2431.15', '2431.2', '2431.25', '2431.3', '2431.35', '2431.4', '2431.45', '2431.5', 
			'2431.55', '2431.6', '2431.65', '2431.7', '2431.75', '2431.8', '2431.85', '2431.9', '2431.95', '2432', 
			'2432.05', '2432.1', '2432.15', '2432.2', '2432.25', '2432.3', '2432.35', '2432.4', '2432.45', '2432.5', 
			'2432.55', '2432.6', '2432.65', '2432.7', '2432.75', '2432.8', '2432.85', '2432.9', '2432.95', '2433', 
			'2433.05', '2433.1', '2433.15', '2433.2', '2433.25', '2433.3', '2433.35', '2433.4', '2433.45', '2433.5', 
			'2433.55', '2433.6', '2433.65', '2433.7', '2433.75', '2433.8', '2433.85', '2433.9', '2433.95', '2434', 
			'2434.05', '2434.1', '2434.15', '2434.2', '2434.25', '2434.3', '2434.35', '2434.4', '2434.45', '2434.5', 
			'2434.55', '2434.6', '2434.65', '2434.7', '2434.75', '2434.8', '2434.85', '2434.9', '2434.95', '2435', 
			'2435.05', '2435.1', '2435.15', '2435.2', '2435.25', '2435.3', '2435.35', '2435.4', '2435.45', '2435.5', 
			'2435.55', '2435.6', '2435.65', '2435.7', '2435.75', '2435.8', '2435.85', '2435.9', '2435.95', '2436', 
			'2436.05', '2436.1', '2436.15', '2436.2', '2436.25', '2436.3', '2436.35', '2436.4', '2436.45', '2436.5', 
			'2436.55', '2436.6', '2436.65', '2436.7', '2436.75', '2436.8', '2436.85', '2436.9', '2436.95', '2437', 
			'2437.05', '2437.1', '2437.15', '2437.2', '2437.25', '2437.3', '2437.35', '2437.4', '2437.45', '2437.5', 
			'2437.55', '2437.6', '2437.65', '2437.7', '2437.75', '2437.8', '2437.85', '2437.9', '2437.95', '2438', 
			'2438.05', '2438.1', '2438.15', '2438.2', '2438.25', '2438.3', '2438.35', '2438.4', '2438.45', '2438.5', 
			'2438.55', '2438.6', '2438.65', '2438.7', '2438.75', '2438.8', '2438.85', '2438.9', '2438.95', '2439', 
			'2439.05', '2439.1', '2439.15', '2439.2', '2439.25', '2439.3', '2439.35', '2439.4', '2439.45', '2439.5', 
			'2439.55', '2439.6', '2439.65', '2439.7', '2439.75', '2439.8', '2439.85', '2439.9', '2439.95', '2440', 
			'2440.05', '2440.1', '2440.15', '2440.2', '2440.25', '2440.3', '2440.35', '2440.4', '2440.45', '2440.5', 
			'2440.55', '2440.6', '2440.65', '2440.7', '2440.75', '2440.8', '2440.85', '2440.9', '2440.95', '2441', 
			'2441.05', '2441.1', '2441.15', '2441.2', '2441.25', '2441.3', '2441.35', '2441.4', '2441.45', '2441.5', 
			'2441.55', '2441.6', '2441.65', '2441.7', '2441.75', '2441.8', '2441.85', '2441.9', '2441.95', '2442', 
			'2442.05', '2442.1', '2442.15', '2442.2', '2442.25', '2442.3', '2442.35', '2442.4', '2442.45', '2442.5', 
			'2442.55', '2442.6', '2442.65', '2442.7', '2442.75', '2442.8', '2442.85', '2442.9', '2442.95', '2443', 
			'2443.05', '2443.1', '2443.15', '2443.2', '2443.25', '2443.3', '2443.35', '2443.4', '2443.45', '2443.5', 
			'2443.55', '2443.6', '2443.65', '2443.7', '2443.75', '2443.8', '2443.85', '2443.9', '2443.95', '2444', 
			'2444.05', '2444.1', '2444.15', '2444.2', '2444.25', '2444.3', '2444.35', '2444.4', '2444.45', '2444.5', 
			'2444.55', '2444.6', '2444.65', '2444.7', '2444.75', '2444.8', '2444.85', '2444.9', '2444.95', '2445', 
			'2445.05', '2445.1', '2445.15', '2445.2', '2445.25', '2445.3', '2445.35', '2445.4', '2445.45', '2445.5', 
			'2445.55', '2445.6', '2445.65', '2445.7', '2445.75', '2445.8', '2445.85', '2445.9', '2445.95', '2446', 
			'2446.05', '2446.1', '2446.15', '2446.2', '2446.25', '2446.3', '2446.35', '2446.4', '2446.45', '2446.5', 
			'2446.55', '2446.6', '2446.65', '2446.7', '2446.75', '2446.8', '2446.85', '2446.9', '2446.95', '2447', 
			'2447.05', '2447.1', '2447.15', '2447.2', '2447.25', '2447.3', '2447.35', '2447.4', '2447.45', '2447.5', 
			'2447.55', '2447.6', '2447.65', '2447.7', '2447.75', '2447.8', '2447.85', '2447.9', '2447.95', '2448', 
			'2448.05', '2448.1', '2448.15', '2448.2', '2448.25', '2448.3', '2448.35', '2448.4', '2448.45', '2448.5', 
			'2448.55', '2448.6', '2448.65', '2448.7', '2448.75', '2448.8', '2448.85', '2448.9', '2448.95', '2449', 
			'2449.05', '2449.1', '2449.15', '2449.2', '2449.25', '2449.3', '2449.35', '2449.4', '2449.45', '2449.5', 
			'2449.55', '2449.6', '2449.65', '2449.7', '2449.75', '2449.8', '2449.85', '2449.9', '2449.95', '2450', 
			'2450.05', '2450.1', '2450.15', '2450.2', '2450.25', '2450.3', '2450.35', '2450.4', '2450.45', '2450.5', 
			'2450.55', '2450.6', '2450.65', '2450.7', '2450.75', '2450.8', '2450.85', '2450.9', '2450.95', '2451', 
			'2451.05', '2451.1', '2451.15', '2451.2', '2451.25', '2451.3', '2451.35', '2451.4', '2451.45', '2451.5', 
			'2451.55', '2451.6', '2451.65', '2451.7', '2451.75', '2451.8', '2451.85', '2451.9', '2451.95', '2452', 
			'2452.05', '2452.1', '2452.15', '2452.2', '2452.25', '2452.3', '2452.35', '2452.4', '2452.45', '2452.5', 
			'2452.55', '2452.6', '2452.65', '2452.7', '2452.75', '2452.8', '2452.85', '2452.9', '2452.95', '2453', 
			'2453.05', '2453.1', '2453.15', '2453.2', '2453.25', '2453.3', '2453.35', '2453.4', '2453.45', '2453.5', 
			'2453.55', '2453.6', '2453.65', '2453.7', '2453.75', '2453.8', '2453.85', '2453.9', '2453.95', '2454', 
			'2454.05', '2454.1', '2454.15', '2454.2', '2454.25', '2454.3', '2454.35', '2454.4', '2454.45', '2454.5', 
			'2454.55', '2454.6', '2454.65', '2454.7', '2454.75', '2454.8', '2454.85', '2454.9', '2454.95', '2455', 
			'2455.05', '2455.1', '2455.15', '2455.2', '2455.25', '2455.3', '2455.35', '2455.4', '2455.45', '2455.5', 
			'2455.55', '2455.6', '2455.65', '2455.7', '2455.75', '2455.8', '2455.85', '2455.9', '2455.95', '2456', 
			'2456.05', '2456.1', '2456.15', '2456.2', '2456.25', '2456.3', '2456.35', '2456.4', '2456.45', '2456.5', 
			'2456.55', '2456.6', '2456.65', '2456.7', '2456.75', '2456.8', '2456.85', '2456.9', '2456.95', '2457', 
			'2457.05', '2457.1', '2457.15', '2457.2', '2457.25', '2457.3', '2457.35', '2457.4', '2457.45', '2457.5', 
			'2457.55', '2457.6', '2457.65', '2457.7', '2457.75', '2457.8', '2457.85', '2457.9', '2457.95', '2458', 
			'2458.05', '2458.1', '2458.15', '2458.2', '2458.25', '2458.3', '2458.35', '2458.4', '2458.45', '2458.5', 
			'2458.55', '2458.6', '2458.65', '2458.7', '2458.75', '2458.8', '2458.85', '2458.9', '2458.95', '2459', 
			'2459.05', '2459.1', '2459.15', '2459.2', '2459.25', '2459.3', '2459.35', '2459.4', '2459.45', '2459.5', 
			'2459.55', '2459.6', '2459.65', '2459.7', '2459.75', '2459.8', '2459.85', '2459.9', '2459.95', '2460', 
			'2460.05', '2460.1', '2460.15', '2460.2', '2460.25', '2460.3', '2460.35', '2460.4', '2460.45', '2460.5', 
			'2460.55', '2460.6', '2460.65', '2460.7', '2460.75', '2460.8', '2460.85', '2460.9', '2460.95', '2461', 
			'2461.05', '2461.1', '2461.15', '2461.2', '2461.25', '2461.3', '2461.35', '2461.4', '2461.45', '2461.5', 
			'2461.55', '2461.6', '2461.65', '2461.7', '2461.75', '2461.8', '2461.85', '2461.9', '2461.95', '2462', 
			'2462.05', '2462.1', '2462.15', '2462.2', '2462.25', '2462.3', '2462.35', '2462.4', '2462.45', '2462.5', 
			'2462.55', '2462.6', '2462.65', '2462.7', '2462.75', '2462.8', '2462.85', '2462.9', '2462.95', '2463', 
			'2463.05', '2463.1', '2463.15', '2463.2', '2463.25', '2463.3', '2463.35', '2463.4', '2463.45', '2463.5', 
			'2463.55', '2463.6', '2463.65', '2463.7', '2463.75', '2463.8', '2463.85', '2463.9', '2463.95', '2464', 
			'2464.05', '2464.1', '2464.15', '2464.2', '2464.25', '2464.3', '2464.35', '2464.4', '2464.45', '2464.5', 
			'2464.55', '2464.6', '2464.65', '2464.7', '2464.75', '2464.8', '2464.85', '2464.9', '2464.95', '2465', 
			'2465.05', '2465.1', '2465.15', '2465.2', '2465.25', '2465.3', '2465.35', '2465.4', '2465.45', '2465.5', 
			'2465.55', '2465.6', '2465.65', '2465.7', '2465.75', '2465.8', '2465.85', '2465.9', '2465.95', '2466', 
			'2466.05', '2466.1', '2466.15', '2466.2', '2466.25', '2466.3', '2466.35', '2466.4', '2466.45', '2466.5', 
			'2466.55', '2466.6', '2466.65', '2466.7', '2466.75', '2466.8', '2466.85', '2466.9', '2466.95', '2467', 
			'2467.05', '2467.1', '2467.15', '2467.2', '2467.25', '2467.3', '2467.35', '2467.4', '2467.45', '2467.5', 
			'2467.55', '2467.6', '2467.65', '2467.7', '2467.75', '2467.8', '2467.85', '2467.9', '2467.95', '2468', 
			'2468.05', '2468.1', '2468.15', '2468.2', '2468.25', '2468.3', '2468.35', '2468.4', '2468.45', '2468.5', 
			'2468.55', '2468.6', '2468.65', '2468.7', '2468.75', '2468.8', '2468.85', '2468.9', '2468.95', '2469', 
			'2469.05', '2469.1', '2469.15', '2469.2', '2469.25', '2469.3', '2469.35', '2469.4', '2469.45', '2469.5', 
			'2469.55', '2469.6', '2469.65', '2469.7', '2469.75', '2469.8', '2469.85', '2469.9', '2469.95', '2470', 
			'2470.05', '2470.1', '2470.15', '2470.2', '2470.25', '2470.3', '2470.35', '2470.4', '2470.45', '2470.5', 
			'2470.55', '2470.6', '2470.65', '2470.7', '2470.75', '2470.8', '2470.85', '2470.9', '2470.95', '2471', 
			'2471.05', '2471.1', '2471.15', '2471.2', '2471.25', '2471.3', '2471.35', '2471.4', '2471.45', '2471.5', 
			'2471.55', '2471.6', '2471.65', '2471.7', '2471.75', '2471.8', '2471.85', '2471.9', '2471.95', '2472', 
			'2472.05', '2472.1', '2472.15', '2472.2', '2472.25', '2472.3', '2472.35', '2472.4', '2472.45', '2472.5', 
			'2472.55', '2472.6', '2472.65', '2472.7', '2472.75', '2472.8', '2472.85', '2472.9', '2472.95', '2473', 
			'2473.05', '2473.1', '2473.15', '2473.2', '2473.25', '2473.3', '2473.35', '2473.4', '2473.45', '2473.5', 
			'2473.55', '2473.6', '2473.65', '2473.7', '2473.75', '2473.8', '2473.85', '2473.9', '2473.95', '2474', 
			'2474.05', '2474.1', '2474.15', '2474.2', '2474.25', '2474.3', '2474.35', '2474.4', '2474.45', '2474.5',  
			'2474.55', '2474.6', '2474.65', '2474.7', '2474.75', '2474.8', '2474.85', '2474.9', '2474.95', '2475', 
			'2475.05', '2475.1', '2475.15', '2475.2', '2475.25', '2475.3', '2475.35', '2475.4', '2475.45', '2475.5', 
			'2475.55', '2475.6', '2475.65', '2475.7', '2475.75', '2475.8', '2475.85', '2475.9', '2475.95', '2476', 
			'2476.05', '2476.1', '2476.15', '2476.2', '2476.25', '2476.3', '2476.35', '2476.4', '2476.45', '2476.5', 
			'2476.55', '2476.6', '2476.65', '2476.7', '2476.75', '2476.8', '2476.85', '2476.9', '2476.95', '2477', 
			'2477.05', '2477.1', '2477.15', '2477.2', '2477.25', '2477.3', '2477.35', '2477.4', '2477.45', '2477.5', 
			'2477.55', '2477.6', '2477.65', '2477.7', '2477.75', '2477.8', '2477.85', '2477.9', '2477.95', '2478', 
			'2478.05', '2478.1', '2478.15', '2478.2', '2478.25', '2478.3', '2478.35', '2478.4', '2478.45', '2478.5', 
			'2478.55', '2478.6', '2478.65', '2478.7', '2478.75', '2478.8', '2478.85', '2478.9', '2478.95', '2479', 
			'2479.05', '2479.1', '2479.15', '2479.2', '2479.25', '2479.3', '2479.35', '2479.4', '2479.45', '2479.5', 
			'2479.55', '2479.6', '2479.65', '2479.7', '2479.75', '2479.8', '2479.85', '2479.9', '2479.95', '2480', 
			'2480.05', '2480.1', '2480.15', '2480.2', '2480.25', '2480.3', '2480.35', '2480.4', '2480.45', '2480.5', 
			'2480.55', '2480.6', '2480.65', '2480.7', '2480.75', '2480.8', '2480.85', '2480.9', '2480.95', '2481', 
			'2481.05', '2481.1', '2481.15', '2481.2', '2481.25', '2481.3', '2481.35', '2481.4', '2481.45', '2481.5', 
			'2481.55', '2481.6', '2481.65', '2481.7', '2481.75', '2481.8', '2481.85', '2481.9', '2481.95', '2482', 
			'2482.05', '2482.1', '2482.15', '2482.2', '2482.25', '2482.3', '2482.35', '2482.4', '2482.45', '2482.5', 
			'2482.55', '2482.6', '2482.65', '2482.7', '2482.75', '2482.8', '2482.85', '2482.9', '2482.95', '2483', 
			'2483.05', '2483.1', '2483.15', '2483.2', '2483.25', '2483.3', '2483.35', '2483.4', '2483.45', '2483.5', 
			'2483.55', '2483.6', '2483.65', '2483.7', '2483.75', '2483.8', '2483.85', '2483.9', '2483.95', '2484', 
			'2484.05', '2484.1', '2484.15', '2484.2', '2484.25', '2484.3', '2484.35', '2484.4', '2484.45', '2484.5', 
			'2484.55', '2484.6', '2484.65', '2484.7', '2484.75', '2484.8', '2484.85', '2484.9', '2484.95', '2485', 
			'2485.05', '2485.1', '2485.15', '2485.2', '2485.25', '2485.3', '2485.35', '2485.4', '2485.45', '2485.5', 
			'2485.55', '2485.6', '2485.65', '2485.7', '2485.75', '2485.8', '2485.85', '2485.9', '2485.95', '2486', 
			'2486.05', '2486.1', '2486.15', '2486.2', '2486.25', '2486.3', '2486.35', '2486.4', '2486.45', '2486.5', 
			'2486.55', '2486.6', '2486.65', '2486.7', '2486.75', '2486.8', '2486.85', '2486.9', '2486.95', '2487', 
			'2487.05', '2487.1', '2487.15', '2487.2', '2487.25', '2487.3', '2487.35', '2487.4', '2487.45', '2487.5', 
			'2487.55', '2487.6', '2487.65', '2487.7', '2487.75', '2487.8', '2487.85', '2487.9', '2487.95', '2488', 
			'2488.05', '2488.1', '2488.15', '2488.2', '2488.25', '2488.3', '2488.35', '2488.4', '2488.45', '2488.5', 
			'2488.55', '2488.6', '2488.65', '2488.7', '2488.75', '2488.8', '2488.85', '2488.9', '2488.95', '2489', 
			'2489.05', '2489.1', '2489.15', '2489.2', '2489.25', '2489.3', '2489.35', '2489.4', '2489.45', '2489.5', 
			'2489.55', '2489.6', '2489.65', '2489.7', '2489.75', '2489.8', '2489.85', '2489.9', '2489.95', '2490', 
			'2490.05', '2490.1', '2490.15', '2490.2', '2490.25', '2490.3', '2490.35', '2490.4', '2490.45', '2490.5', 
			'2490.55', '2490.6', '2490.65', '2490.7', '2490.75', '2490.8', '2490.85', '2490.9', '2490.95', '2491', 
			'2491.05', '2491.1', '2491.15', '2491.2', '2491.25', '2491.3', '2491.35', '2491.4', '2491.45', '2491.5', 
			'2491.55', '2491.6', '2491.65', '2491.7', '2491.75', '2491.8', '2491.85', '2491.9', '2491.95', '2492', 
			'2492.05', '2492.1', '2492.15', '2492.2', '2492.25', '2492.3', '2492.35', '2492.4', '2492.45', '2492.5', 
			'2492.55', '2492.6', '2492.65', '2492.7', '2492.75', '2492.8', '2492.85', '2492.9', '2492.95', '2493', 
			'2493.05', '2493.1', '2493.15', '2493.2', '2493.25', '2493.3', '2493.35', '2493.4', '2493.45', '2493.5',  
			'2493.55', '2493.6', '2493.65', '2493.7', '2493.75', '2493.8', '2493.85', '2493.9', '2493.95', '2494', 
			'2494.05', '2494.1', '2494.15', '2494.2', '2494.25', '2494.3', '2494.35', '2494.4', '2494.45', '2494.5', 
			'2494.55', '2494.6', '2494.65', '2494.7', '2494.75', '2494.8', '2494.85', '2494.9', '2494.95', '2495');
			break;
			
		case 4:
			// Дополнительные константы и настройки для анализатора спектра на модуле CYWUSB6935
			$this->device_name = 'CYWUSB6935 (Cypress CYRF6935)'; // Название устройства
			$this->file_name = "data/6935.log"; // Имя log-файла
			$this->time_const = 0.05; // Постоянный множитель времени для расчета полного времени анализа
			$this->dots = 83; // Количество точек дискретизации по оси частот (счет начинается с 0)
			$this->steps_number = 5; // Количество точек и расстояние между вертикальными осями по оси частот

			$this->frequency_labels = array('2400', 
			'2401', '2402', '2403', '2404', '2405', '2406', '2407', '2408', '2409', '2410', 
			'2411', '2412', '2413', '2414', '2415', '2416', '2417', '2418', '2419', '2420', 
			'2421', '2422', '2423', '2424', '2425', '2426', '2427', '2428', '2429', '2430', 
			'2431', '2432', '2433', '2434', '2435', '2436', '2437', '2438', '2439', '2440', 
			'2441', '2442', '2443', '2444', '2445', '2446', '2447', '2448', '2449', '2450', 
			'2451', '2452', '2453', '2454', '2455', '2456', '2457', '2458', '2459', '2460', 
			'2461', '2462', '2463', '2464', '2465', '2466', '2467', '2468', '2469', '2470', 
			'2471', '2472', '2473', '2474', '2475', '2476', '2477', '2478', '2479', '2480', 
			'2481', '2482', '2483');
			break;
			
		/*case 5:
			// Дополнительные константы и настройки для анализатора спектра на модуле eZ430-RF2500
			$this->device_name = 'eZ430-RF2500 (Chipcon CC2500)'; // Название устройства
			$this->file_name = "data/ez430.log"; // Имя log-файла
			$this->time_const = 1.1; // Постоянный множитель времени для расчета полного времени анализа
			$this->dots = 200; // Количество точек дискретизации по оси частот (счет начинается с 0)
			$this->steps_number = 40; // Количество точек и расстояние между вертикальными осями по оси частот

			$this->frequency_labels = array('2433',
			'2433.2', '2433.4', '2433.6', '2433.8', '2434', '2434.2', '2434.4', '2434.6', '2434.8', '2435',
			'2435.2', '2435.4', '2435.6', '2435.8', '2436', '2436.2', '2436.4', '2436.6', '2436.8', '2437',
			'2437.2', '2437.4', '2437.6', '2437.8', '2438', '2438.2', '2438.4', '2438.6', '2438.8', '2439',
			'2439.2', '2439.4', '2439.6', '2439.8', '2440', '2440.2', '2440.4', '2440.6', '2440.8', '2441',
			'2441.2', '2441.4', '2441.6', '2441.8', '2442', '2442.2', '2442.4', '2442.6', '2442.8', '2443',
			'2443.2', '2443.4', '2443.6', '2443.8', '2444', '2444.2', '2444.4', '2444.6', '2444.8', '2445',
			'2445.2', '2445.4', '2445.6', '2445.8', '2446', '2446.2', '2446.4', '2446.6', '2446.8', '2447',
			'2447.2', '2447.4', '2447.6', '2447.8', '2448', '2448.2', '2448.4', '2448.6', '2448.8', '2449',
			'2449.2', '2449.4', '2449.6', '2449.8', '2450', '2450.2', '2450.4', '2450.6', '2450.8', '2451',
			'2451.2', '2451.4', '2451.6', '2451.8', '2452', '2452.2', '2452.4', '2452.6', '2452.8', '2453',
			'2453.2', '2453.4', '2453.6', '2453.8', '2454', '2454.2', '2454.4', '2454.6', '2454.8', '2455',
			'2455.2', '2455.4', '2455.6', '2455.8', '2456', '2456.2', '2456.4', '2456.6', '2456.8', '2457',
			'2457.2', '2457.4', '2457.6', '2457.8', '2458', '2458.2', '2458.4', '2458.6', '2458.8', '2459',
			'2459.2', '2459.4', '2459.6', '2459.8', '2460', '2460.2', '2460.4', '2460.6', '2460.8', '2461',
			'2461.2', '2461.4', '2461.6', '2461.8', '2462', '2462.2', '2462.4', '2462.6', '2462.8', '2463',
			'2463.2', '2463.4', '2463.6', '2463.8', '2464', '2464.2', '2464.4', '2464.6', '2464.8', '2465',
			'2465.2', '2465.4', '2465.6', '2465.8', '2466', '2466.2', '2466.4', '2466.6', '2466.8', '2467',
			'2467.2', '2467.4', '2467.6', '2467.8', '2468', '2468.2', '2468.4', '2468.6', '2468.8', '2469',
			'2469.2', '2469.4', '2469.6', '2469.8', '2470', '2470.2', '2470.4', '2470.6', '2470.8', '2471',
			'2471.2', '2471.4', '2471.6', '2471.8', '2472', '2472.2', '2472.4', '2472.6', '2472.8');
			break;/**/
				
		case 5:
			// Дополнительные константы и настройки для анализатора спектра на модуле eZ430-RF2500
			$this->device_name = 'eZ430-RF2500 (Chipcon CC2500)'; // Название устройства
			$this->file_name = "data/ez430.log"; // Имя log-файла
			$this->time_const = 1.1; // Постоянный множитель времени для расчета полного времени анализа
			$this->dots = 256; // Количество точек дискретизации по оси частот (счет начинается с 0)
			$this->steps_number = 20; // Количество точек и расстояние между вертикальными осями по оси частот

			$this->frequency_labels = array('2400.00', 
			'2400.41', '2400.81', '2401.22', '2401.62', '2402.03', '2402.43', '2402.84', '2403.24', '2403.65', '2404.05', 
			'2404.46', '2404.86', '2405.27', '2405.67', '2406.08', '2406.48', '2406.89', '2407.29', '2407.70', '2408.10', 
			'2408.51', '2408.91', '2409.32', '2409.72', '2410.13', '2410.53', '2410.94', '2411.34', '2411.75', '2412.15', 
			'2412.56', '2412.96', '2413.37', '2413.77', '2414.18', '2414.58', '2414.99', '2415.39', '2415.80', '2416.20', 
			'2416.61', '2417.01', '2417.42', '2417.82', '2418.23', '2418.63', '2419.04', '2419.44', '2419.85', '2420.25', 
			'2420.66', '2421.06', '2421.47', '2421.87', '2422.28', '2422.68', '2423.09', '2423.49', '2423.90', '2424.30', 
			'2424.71', '2425.11', '2425.52', '2425.92', '2426.33', '2426.73', '2427.14', '2427.54', '2427.95', '2428.35', 
			'2428.76', '2429.16', '2429.57', '2429.97', '2430.38', '2430.78', '2431.19', '2431.59', '2432.00', '2432.40', 
			'2432.81', '2433.21', '2433.62', '2434.02', '2434.43', '2434.83', '2435.24', '2435.64', '2436.05', '2436.45', 
			'2436.86', '2437.26', '2437.67', '2438.07', '2438.48', '2438.88', '2439.29', '2439.69', '2440.10', '2440.50', 
			'2440.91', '2441.31', '2441.72', '2442.12', '2442.53', '2442.93', '2443.34', '2443.74', '2444.15', '2444.55', 
			'2444.96', '2445.36', '2445.77', '2446.17', '2446.58', '2446.98', '2447.39', '2447.79', '2448.20', '2448.60', 
			'2449.01', '2449.41', '2449.82', '2450.22', '2450.63', '2451.03', '2451.44', '2451.84', '2452.25', '2452.65', 
			'2453.06', '2453.46', '2453.87', '2454.27', '2454.68', '2455.08', '2455.49', '2455.89', '2456.30', '2456.70', 
			'2457.11', '2457.51', '2457.92', '2458.32', '2458.73', '2459.13', '2459.54', '2459.94', '2460.35', '2460.75', 
			'2461.16', '2461.56', '2461.97', '2462.37', '2462.78', '2463.18', '2463.59', '2463.99', '2464.40', '2464.80', 
			'2465.21', '2465.61', '2466.02', '2466.42', '2466.83', '2467.23', '2467.64', '2468.04', '2468.45', '2468.85', 
			'2469.26', '2469.66', '2470.07', '2470.47', '2470.88', '2471.28', '2471.69', '2472.09', '2472.50', '2472.90', 
			'2473.31', '2473.71', '2474.12', '2474.52', '2474.93', '2475.33', '2475.74', '2476.14', '2476.55', '2476.95', 
			'2477.36', '2477.76', '2478.17', '2478.57', '2478.98', '2479.38', '2479.79', '2480.19', '2480.60', '2481.00', 
			'2481.41', '2481.81', '2482.22', '2482.62', '2483.03', '2483.43', '2483.84', '2484.24', '2484.65', '2485.05', 
			'2485.46', '2485.86', '2486.27', '2486.67', '2487.08', '2487.48', '2487.89', '2488.29', '2488.70', '2489.10', 
			'2489.51', '2489.91', '2490.32', '2490.72', '2491.13', '2491.53', '2491.94', '2492.34', '2492.75', '2493.15', 
			'2493.56', '2493.96', '2494.37', '2494.77', '2495.18', '2495.58', '2495.99', '2496.39', '2496.80', '2497.20', 
			'2497.61', '2498.01', '2498.42', '2498.82', '2499.23', '2499.63', '2500.04', '2500.44', '2500.85', '2501.25', 
			'2501.66', '2502.06', '2502.47', '2502.87', '2503.28');
			break;/**/
			
		default:
			echo 'Device type error. ';
		}
	}
	
	// Формирование двумерного массива с данными (по строкам порядковые номера, а по столбцам частоты) для разных устройств по-разному
	function parser() {
		$all_temp = array();
		
		// Открытие log-файла на чтение
		$handle = @fopen($this->file_name, "r") or die('No such log-file.');

		switch ($this->device_type) {
		case 0:
			while (!feof($handle)) {
				$buffer = fgets($handle, 1200);
				
				// Разбор строки с выделением значений мощности
				$str_first = 'frame: [';
				$str_last = '] | totalFrameCnt:';
				
				$pos1 = stripos($buffer, $str_first);
				$pos2 = strripos($buffer, $str_last);
				
				if (!$pos1 === false and !$pos2 === false) {
					$srt = substr($buffer, $pos1 + 8, $pos2 - $pos1 - 8);
					$frequency = explode(", ", $srt);
					
					array_push($all_temp, $frequency); 
				}
			}
			break;
			
		case 1:
			while (!feof($handle)) {
				$buffer = fgets($handle, 1000);
				
				// Разбор строки с выделением значений мощности
				$str_first = ',00 61 ,00 00 ';
				$str_last = ' ;,';
				
				$pos1 = stripos($buffer, $str_first);
				$pos2 = strripos($buffer, $str_last);
				
				if (!$pos1 === false and !$pos2 === false) {
					$srt = substr($buffer, $pos1 + 14, $pos2 - $pos1 - 14);
					$frequency_temp = explode(" ", $srt);
					for ($i = 0; $i <= $this->dots; $i++) {
						// Перевод из шестнадцатиричной системы в десятичную и калибровка значений
						$frequency[$i] = ((hexdec($frequency_temp[3*$i]) - 254) + 82) * 1.428 - 97;
					}
					array_push($all_temp, $frequency); 
				}
			}
			break;
			
		case 2:
			while (!feof($handle)) {
				$buffer = fgets($handle, 800);
				
				// Разбор строки с выделением значений мощности
				$str_first = 'frame: [';
				$str_last = ',] :';
				
				$pos1 = stripos($buffer, $str_first);
				$pos2 = strripos($buffer, $str_last);
				
				if (!$pos1 === false and !$pos2 === false) {
					$srt = substr($buffer, $pos1 + 8, $pos2 - $pos1 - 8);
					$frequency = explode(",", $srt);
					for ($i = 0; $i <= $this->dots; $i++) {
						$frequency[$i+1] -= 12;
					}
					array_push($all_temp, $frequency); 
				}
			}
			break;
			
		case 3:
			while (!feof($handle)) {
				$buffer = fgets($handle, 10000);
				
				// Разбор строки с выделением значений мощности
				$str_first = 'frame: [';
				$str_last = ',] :';
				
				$pos1 = stripos($buffer, $str_first);
				$pos2 = strripos($buffer, $str_last);
				
				if (!$pos1 === false and !$pos2 === false) {
					$srt = substr($buffer, $pos1 + 8, $pos2 - $pos1 - 8);
					
					$frequency = explode(",", $srt);
					
					array_push($all_temp, $frequency); 
				}
			}
			break;
			
		case 4:
			while (!feof($handle)) {
				$buffer = fgets($handle, 1000);
				//echo $buffer.'||';
				// Разбор строки с выделением значений мощности
				$str_first = 'frame: [';
				$str_last = ',]';
				
				$pos1 = stripos($buffer, $str_first);
				$pos2 = strripos($buffer, $str_last);
				
				if (/*!$pos1 === false and */!$pos2 === false) {
					$srt = substr($buffer, $pos1 + 8, $pos2 - $pos1 - 8);
					$frequency = explode(",", $srt);
					for ($i = 0; $i <= $this->dots; $i++) {
						// Исходя из документации имеем: -95 дБмВт соответствует 10 (RSSI), а -40 -> 28
						if ($frequency[$i] <= 10) {
							$frequency[$i] = -95;
						} else if ($frequency[$i] >= 28) {
							$frequency[$i] = -40;
						} else {
							$frequency[$i] = 3.06 * $frequency[$i] - 125.56;
						}
					}
					array_push($all_temp, $frequency); 
				}
			}
			break;
			
		case 5:
			while (!feof($handle)) {
				$buffer = fgets($handle, 1400);
				
				// Разбор строки с выделением значений мощности
				$str_first = 'frame: [';
				$str_last = ',] :';
				
				$pos1 = stripos($buffer, $str_first);
				$pos2 = strripos($buffer, $str_last);
				
				if (!$pos1 === false and !$pos2 === false) {
					$srt = substr($buffer, $pos1 + 8, $pos2 - $pos1 - 8);
					$frequency = explode(",", $srt);
					
					array_push($all_temp, $frequency); 
				}
				else
				{
					$frequency = explode(" ", $buffer);
					array_push($all_temp, $frequency);
				}
			}
			break;/**/
		/*	
		case 5:
			while (!feof($handle)) {
			
				$buffer = fgets($handle, 1400);
				$frequency = explode(" ", $buffer);
				array_push($all_temp, $frequency);
			}
			break;
			/**/
		}
		// Закрытие log-файла
		fclose($handle);
		
		return $all_temp;
	}
	
	// Расчет пределов канала
	function channel_borders($number_channel, $weight_channel_border, $weight_channel_hit) {
		$this->positions['exist'] = true;
		
		$correction = correction($number_channel);
		
		if ($weight_channel_hit > 3) {
			if ($number_channel >= 1 and $number_channel <= 14) {
				switch ($this->device_type)	{
				case 0:
					$this->positions['min_border'] 	= $number_channel * 10 + 16 + $correction - $weight_channel_border;
					$this->positions['min_hit'] 	= $number_channel * 10 + 16 + $correction - $weight_channel_hit;
					$this->positions['max_hit'] 	= $number_channel * 10 + 16 + $correction + $weight_channel_hit;
					$this->positions['max_border'] 	= $number_channel * 10 + 16 + $correction + $weight_channel_border;
					break;
			
				case 1:
					$this->positions['min_border'] 	= $number_channel * 5 + 8 + $correction / 2 - round($weight_channel_border / 2);
					$this->positions['min_hit'] 	= $number_channel * 5 + 8 + $correction / 2 - round($weight_channel_hit / 2);
					$this->positions['max_hit'] 	= $number_channel * 5 + 8 + $correction / 2 + round($weight_channel_hit / 2);
					$this->positions['max_border'] 	= $number_channel * 5 + 8 + $correction / 2 + round($weight_channel_border / 2);
					break;
		
				case 2:
					$this->positions['min_border'] 	= $number_channel * 10 + 14 + $correction - $weight_channel_border;
					$this->positions['min_hit'] 	= $number_channel * 10 + 14 + $correction - $weight_channel_hit;
					$this->positions['max_hit'] 	= $number_channel * 10 + 14 + $correction + $weight_channel_hit;
					$this->positions['max_border'] 	= $number_channel * 10 + 14 + $correction + $weight_channel_border;
					break;
					
				case 3:
					$this->positions['min_border'] 	= 10 * ($number_channel * 10 + 14 + $correction - $weight_channel_border);
					$this->positions['min_hit'] 	= 10 * ($number_channel * 10 + 14 + $correction - $weight_channel_hit);
					$this->positions['max_hit'] 	= 10 * ($number_channel * 10 + 14 + $correction + $weight_channel_hit);
					$this->positions['max_border'] 	= 10 * ($number_channel * 10 + 14 + $correction + $weight_channel_border);
					break;
					
				case 4:
					$this->positions['min_border'] 	= $number_channel * 5 + 7 + $correction / 2 - round($weight_channel_border / 2);
					$this->positions['min_hit'] 	= $number_channel * 5 + 7 + $correction / 2 - round($weight_channel_hit / 2);
					$this->positions['max_hit'] 	= $number_channel * 5 + 7 + $correction / 2 + round($weight_channel_hit / 2);
					$this->positions['max_border'] 	= $number_channel * 5 + 7 + $correction / 2 + round($weight_channel_border / 2);
					break;
					
				case 5:
					$this->positions['min_border'] 	= 4 * ($number_channel * 10 + 14 -66 + $correction - $weight_channel_border);
					$this->positions['min_hit'] 	= 4 * ($number_channel * 10 + 14 -66 + $correction - $weight_channel_hit);
					$this->positions['max_hit'] 	= 4 * ($number_channel * 10 + 14 -66 + $correction + $weight_channel_hit);
					$this->positions['max_border'] 	= 4 * ($number_channel * 10 + 14 -66 + $correction + $weight_channel_border);
					break;
				}
				if ($this->positions['min_border'] < 0)
						$this->positions['min_border'] = 0;
				if ($this->positions['min_hit'] < 0)
						$this->positions['min_hit'] = 0;
				if ($this->positions['max_hit'] > $this->dots)
						$this->positions['max_hit'] = $this->dots;
				if ($this->positions['max_border'] > $this->dots)
						$this->positions['max_border'] = $this->dots;
			} else {
				$this->positions['exist'] = false;
			}
		} else {
			$this->positions['exist'] = false;
		}
	}
	
	// Определение границ канала
	function borders($frequencies) {
		$borders = array();
		
		$borders['min_border'] = $frequencies[$this->positions['min_border']];
		$borders['min_hit'] = $frequencies[$this->positions['min_hit']];
		$borders['max_hit'] = $frequencies[$this->positions['max_hit']];
		$borders['max_border'] = $frequencies[$this->positions['max_border']];
		$borders['exist'] = $this->positions['exist'];
	
		return $borders;
	}
	
	// Отступ по шкале абсцисс для подписей к каналу (ширине и номеру)
	function indent_x($number_channel) {
		$correction = correction($number_channel);
		
		switch ($this->device_type)	{
		case 0:
			$number_channel_indent = $number_channel * 10 + 16 + $correction;
			break;
		case 1:
			$number_channel_indent = $number_channel * 5 + 8 + $correction / 2;
			break;
		case 2:
			$number_channel_indent = $number_channel * 10 + 14 + $correction;
			break;
		case 3:
			$number_channel_indent = 10 * ($number_channel * 10 + 14 + $correction);
			break;
		case 4:
			$number_channel_indent = $number_channel * 5 + 7 + $correction / 2;
			break;
		case 5:
			$number_channel_indent = 4 * ($number_channel * 10 + 14 -66 + $correction);
			break;
		}
		return $number_channel_indent;
	}
	
	// Значение внутренней ширины канала
	function label_hit() {
		switch ($this->device_type) {
		case 0:
			$label = ($this->positions['max_hit'] - $this->positions['min_hit']) / 2;
			break;
		case 1:
			$label = $this->positions['max_hit'] - $this->positions['min_hit'];
			break;
		case 2:
			$label = ($this->positions['max_hit'] - $this->positions['min_hit']) / 2;
			break;
		case 3:
			$label = ($this->positions['max_hit'] - $this->positions['min_hit']) / 20;
			break;
		case 4:
			$label = $this->positions['max_hit'] - $this->positions['min_hit'];
			break;
		case 5:
			$label = ($this->positions['max_hit'] - $this->positions['min_hit']) / 8;
			break;
		}
		return $label;
	}

	// Значение внешней ширины канала
	function label_border() {
		switch ($this->device_type) {
		case 0:
			$label = ($this->positions['max_border'] - $this->positions['min_border']) / 2;
			break;
		case 1:
			$label = $this->positions['max_border'] - $this->positions['min_border'];
			break;
		case 2:
			$label = ($this->positions['max_border'] - $this->positions['min_border']) / 2;
			break;
		case 3:
			$label = ($this->positions['max_border'] - $this->positions['min_border']) / 20;
			break;
		case 4:
			$label = $this->positions['max_border'] - $this->positions['min_border'];
			break;
		case 5:
			$label = ($this->positions['max_border'] - $this->positions['min_border']) / 8;
			break;	
		}
		return $label;
	}
	
	// Определение канала c максимальным уровнем сигнала
	function max_number_channel($max_frequency, $weight_channel_border, $weight_channel_hit, $type_channel) {
		$number_position = array();
		$array_channel_energy = array();
		
		// Урезание ширины внутренних границ канала и номеров
		if ($type_channel == 'n') {
			$min_number = 3;
			$max_number = 11;
			if ($weight_channel_hit > 38)
				$weight_channel_hit = 38;
		} else {
			$min_number = 1;
			$max_number = 13;
			if ($weight_channel_hit > 22)
				$weight_channel_hit = 22;
		}
		
		for ($i = $min_number; $i <= $max_number; $i++) {
			$energy_summa = 0;
			$this->channel_borders($i, $weight_channel_border, $weight_channel_hit);
					
			for ($j = $this->positions['min_hit']; $j <= $this->positions['max_hit']; $j++) {
				$energy_summa += $max_frequency[$j];
			}
			$array_channel_energy[$i] = $energy_summa;
		}
		
		// Возвращает номер канала с максимальными значениями. Если энергии равны, то вызывается с меньшим номером (очень редкий случай)
		foreach ($array_channel_energy as $key => $val) {
			if ($val == max($array_channel_energy)) {
				$this->channel_borders($key, $weight_channel_border, $weight_channel_hit);
				return $key;
			}
		}
	}
}